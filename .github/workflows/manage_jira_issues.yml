# Thinkingreedの社内管理用のGitHub Actions
# 本コードは社内管理用のため、基本的にサポートの対象外となります。
name: Manage Jira Issues

# githubのissueが開かれたとき、編集されたとき、削除されたとき、またはクローズされたときに作動
on:
  issues:
    types: [opened, edited, deleted, closed, reopened]

permissions:
  issues: read

# ここからworkflow
jobs:
  build:
    runs-on: ubuntu-latest
    name: Manage Jira Issues
    steps:
    - name: Check Secrets
      run: |
        if [ -z "${{ secrets.JIRA_BASE_URL }}" ] || [ -z "${{ secrets.JIRA_USER_EMAIL }}" ] || [ -z "${{ secrets.JIRA_API_TOKEN }}" ] || [ -z "${{ secrets.JIRA_PROJECT }}" ]; then
          echo "JIRA登録用のSecretsが登録されていません。"
          exit 1
        fi

    - name: Manage Jira Issue
      if: success()
      run: |
        ISSUE_KEY=$(curl --request GET \
        --url "${{ secrets.JIRA_BASE_URL }}/rest/api/3/search?jql=project%20%3D%20'${{ secrets.JIRA_PROJECT }}'%20AND%20summary%20~%20%22%5C%22github%23${{ github.event.issue.number }}*%5C%22%22" \
        --user "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
        --header 'Accept: application/json' \
        --header 'Content-Type: application/json' \
        | jq -r '.issues[0].key // empty')

        SUMMARY="github#${{ github.event.issue.number }} $GITHUB_ISSUE_TITLE"

        # 変換処理：Markdown → JIRA Wiki
        BODY_CONVERTED=$(echo "$GITHUB_ISSUE_BODY" | perl -pe '
          s/\*\*(.+?)\*\*/\*$1\*/g;           # 太字 **text** → *text*
          s/__(.+?)__/+$1+/g;                 # 下線 __text__ → +text+
          s/^\* /- /gmi;                      # 箇条書き * item → - item
          s/^### (.+)/h3. $1/gm;             # 見出し ### → h3.
          s/^## (.+)/h2. $1/gm;
          s/^# (.+)/h1. $1/gm;
          s/\[([^\]]+?)\]\(([^)]+?)\)/\[$1|$2\]/g; # リンク [text](url) → [text|url]
        ')

        DESCRIPTION="${{ github.event.issue.html_url }}

        $BODY_CONVERTED"

        if [ "${{ github.event.action }}" = "opened" ] || [ "${{ github.event.action }}" = "edited" ]; then
          if [ -z "$ISSUE_KEY" ]; then
            # 新規作成
            JSON_PAYLOAD=$(jq -n \
              --arg summary "$SUMMARY" \
              --arg description "$DESCRIPTION" \
              --arg project "${{ secrets.JIRA_PROJECT }}" \
              '{
                fields: {
                  project: { key: $project },
                  issuetype: { name: "Task" },
                  summary: $summary,
                  description: $description,
                  labels: ["github-issue"]
                }
              }')

            curl -X POST \
              -H "Content-Type: application/json" \
              -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -d "$JSON_PAYLOAD" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/"
          else
            # 既存チケットの更新
            JSON_PAYLOAD=$(jq -n \
              --arg summary "$SUMMARY" \
              --arg description "$DESCRIPTION" \
              '{
                fields: {
                  summary: $summary,
                  description: $description,
                  labels: ["github-issue"]
                }
              }')

            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -d "$JSON_PAYLOAD" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$ISSUE_KEY"
          fi

        elif [ "${{ github.event.action }}" = "deleted" ]; then
          if [ -n "$ISSUE_KEY" ]; then
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -d '{
                "update": {
                  "labels": [
                    { "add": "github-deleted" }
                  ]
                }
              }' \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$ISSUE_KEY"
          fi

        elif [ "${{ github.event.action }}" = "closed" ]; then
          if [ -n "$ISSUE_KEY" ]; then
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -d '{
                "update": {
                  "labels": [
                    { "add": "github-closed" }
                  ]
                }
              }' \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$ISSUE_KEY"
          fi

        elif [ "${{ github.event.action }}" = "reopened" ]; then
          if [ -n "$ISSUE_KEY" ]; then
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -d '{
                "update": {
                  "labels": [
                    { "remove": "github-closed" }
                  ]
                }
              }' \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$ISSUE_KEY"
          fi
        fi
      env:
        GITHUB_ISSUE_TITLE: "${{ github.event.issue.title }}"
        GITHUB_ISSUE_BODY: "${{ github.event.issue.body }}"
